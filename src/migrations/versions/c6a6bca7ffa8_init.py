"""init

Revision ID: c6a6bca7ffa8
Revises:
Create Date: 2022-10-20 16:17:51.766318

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "c6a6bca7ffa8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=False)
    op.create_index(op.f("ix_user_uuid"), "user", ["uuid"], unique=False)
    op.create_table(
        "post",
        sa.Column("uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("author_uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_uuid"],
            ["user.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(op.f("ix_post_author_uuid"), "post", ["author_uuid"], unique=False)
    op.create_index(op.f("ix_post_uuid"), "post", ["uuid"], unique=False)
    op.create_table(
        "session",
        sa.Column("user_uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("key", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["user.uuid"],
        ),
        sa.PrimaryKeyConstraint("key"),
    )
    op.create_index(op.f("ix_session_key"), "session", ["key"], unique=False)
    op.create_table(
        "comment",
        sa.Column("uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("author_uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("text", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("parent_post_uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("parent_comment_uuid", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_uuid"],
            ["user.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_comment_uuid"],
            ["comment.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_post_uuid"],
            ["post.uuid"],
        ),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_index(op.f("ix_comment_author_uuid"), "comment", ["author_uuid"], unique=False)
    op.create_index(op.f("ix_comment_parent_post_uuid"), "comment", ["parent_post_uuid"], unique=False)
    op.create_index(op.f("ix_comment_uuid"), "comment", ["uuid"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_comment_uuid"), table_name="comment")
    op.drop_index(op.f("ix_comment_parent_post_uuid"), table_name="comment")
    op.drop_index(op.f("ix_comment_author_uuid"), table_name="comment")
    op.drop_table("comment")
    op.drop_index(op.f("ix_session_key"), table_name="session")
    op.drop_table("session")
    op.drop_index(op.f("ix_post_uuid"), table_name="post")
    op.drop_index(op.f("ix_post_author_uuid"), table_name="post")
    op.drop_table("post")
    op.drop_index(op.f("ix_user_uuid"), table_name="user")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
