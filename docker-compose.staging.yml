version: '3.3'

services:
  db:
    image: postgres:13.4
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "${DATABASE_USER}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
      POSTGRES_DB: "${DATABASE_NAME}"
      TZ: GMT+3

  backend:
    build: ./src
    image: base_backend
    restart: on-failure
    depends_on:
      - db
      - redis
    ports:
      - "8002:8000"
    command: python main.py
    environment: &env
      ENV: staging
      DATABASE: postgres
      DATABASE_USER: "${DATABASE_USER}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME: "${DATABASE_NAME}"
      CLIENT_SECRET: "${CLIENT_SECRET}"
      REDIS_DSN: "${REDIS_DSN}"
      SERVICE_ACCESS_KEY: "${SERVICE_ACCESS_KEY}"

  celery:
    image: base_backend
    restart: on-failure
    command: celery -A core.celery_app worker -B -l info
    depends_on:
      - redis
      - db
    environment:
      <<: *env

  redis:
    image: redis:6.2.5
    restart: on-failure
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
